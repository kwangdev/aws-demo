AWSTemplateFormatVersion: 2010-09-09
Description: three AWS ami instances sit in public subnet

Parameters:
  Keyname:
    Description: KeyName
    Type: AWS::EC2::KeyPair::KeyName

  ParentStackName:
    Description: parent stack name
    Type: String
    Default: vpc-3AZs
Resources:
  SgGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: SgGroup
      GroupDescription: my security group
      VpcId:
        Fn::ImportValue: !Sub ${ParentStackName}-VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
  RolePolicies:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: "S3Download"
      PolicyDocument:
        Statement:
          Action:
            - s3:*
          Effect: Allow
          Resource:
            - arn:aws:s3:::kwangs3lambda/*
      Roles:
        - !Ref InstanceRole

  iamInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref InstanceRole
    DependsOn: "InstanceRole"

  EC2InstanceA:
    Type: AWS::EC2::Instance
    Properties:
      KeyName: !Ref Keyname
      ImageId: "ami-03ed5bd63ba378bd8"
      InstanceType: t2.micro
      Monitoring: false
      IamInstanceProfile: !Ref iamInstanceProfile
      SubnetId:
        Fn::ImportValue: !Sub "${ParentStackName}-SubnetAPublic"
      SecurityGroupIds:
        - !GetAtt "SgGroup.GroupId"
      UserData: !Base64 |
        #!/bin/bash
        yum update -y
        yum install -y httpd
        systemctl start httpd
        systemctl enable httpd
        usermod -a -G root ec2-user
        chown -R ec2-user:root /var/www
        chmod 2775 /var/www
        find /var/www -type d -exec chmod 2775 {} \;
        find /var/www -type f -exec chmod 0664 {} \;
        echo "<h1>hello from instance A</h1>" > /var/www/html/index.html
      Tags:
        - Key: Name
          Value: InstanceA

  EC2InstanceB:
    Type: AWS::EC2::Instance
    Properties:
      KeyName: !Ref Keyname
      ImageId: "ami-03ed5bd63ba378bd8"
      InstanceType: t2.micro
      SubnetId:
        Fn::ImportValue: !Sub "${ParentStackName}-SubnetBPublic"
      SecurityGroupIds:
        - !GetAtt "SgGroup.GroupId"
      UserData: !Base64 |
        #!/bin/bash
        yum update -y
        yum install -y httpd
        systemctl start httpd
        systemctl enable httpd
        usermod -a -G root ec2-user
        chown -R ec2-user:root /var/www
        chmod 2775 /var/www
        find /var/www -type d -exec chmod 2775 {} \;
        find /var/www -type f -exec chmod 0664 {} \;
        echo "<h1>hello from instance B</h1>" > /var/www/html/index.html
      Tags:
        - Key: Name
          Value: InstanceB

  EC2InstanceC:
    Type: AWS::EC2::Instance
    Properties:
      KeyName: !Ref Keyname
      ImageId: "ami-03ed5bd63ba378bd8"
      InstanceType: t2.micro
      SubnetId:
        Fn::ImportValue: !Sub "${ParentStackName}-SubnetCPublic"
      SecurityGroupIds:
        - !GetAtt "SgGroup.GroupId"
      UserData: !Base64 |
        #!/bin/bash
        yum update -y
        yum install -y httpd
        systemctl start httpd
        systemctl enable httpd
        usermod -a -G root ec2-user
        chown -R ec2-user:root /var/www
        chmod 2775 /var/www
        find /var/www -type d -exec chmod 2775 {} \;
        find /var/www -type f -exec chmod 0664 {} \;
        echo "<h1>hello from instance C</h1>" > /var/www/html/index.html
      Tags:
        - Key: Name
          Value: InstanceC
