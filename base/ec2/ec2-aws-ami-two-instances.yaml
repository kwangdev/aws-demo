AWSTemplateFormatVersion: 2010-09-09
Description: two AWS ami instances sit in public subnet

Parameters:
  Keyname:
    Description: KeyName
    Type: AWS::EC2::KeyPair::KeyName

  ParentStackName:
    Description: parent stack name
    Type: String
    Default: Vpc-2AZs
Resources:
  SgGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: SgGroup
      GroupDescription: my security group
      VpcId:
        Fn::ImportValue: !Sub ${ParentStackName}-VpcId
      SecurityGroupIngress:
        IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0

  InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
  RolePolicies:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: "S3Download"
      PolicyDocument:
        Statement:
          Action:
            - s3:*
          Effect: Allow
          Resource:
            - arn:aws:s3:::kwangs3lambda/*
      Roles:
        - !Ref InstanceRole

  iamInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref InstanceRole
    DependsOn: "InstanceRole"

  EC2SquidProxyInstance:
    Type: AWS::EC2::Instance
    Properties:
      KeyName: !Ref Keyname
      ImageId: "ami-03ed5bd63ba378bd8"
      InstanceType: t2.micro
      Monitoring: false
      IamInstanceProfile: !Ref iamInstanceProfile
      SubnetId:
        Fn::ImportValue: !Sub "${ParentStackName}-SubnetAPublic"
      SecurityGroupIds:
        - !GetAtt "SgGroup.GroupId"
      UserData: !Base64 |
        #!/bin/bash -ex
        # put your script here
      Tags:
        - Key: Name
          Value: Proxy Instance

  EC2NodeInstance:
    Type: AWS::EC2::Instance
    Properties:
      KeyName: !Ref Keyname
      ImageId: "ami-03ed5bd63ba378bd8"
      InstanceType: t2.micro
      SubnetId:
        Fn::ImportValue: !Sub "${ParentStackName}-SubnetAPrivate"
      SecurityGroupIds:
        - !GetAtt "SgGroup.GroupId"
      UserData: !Base64 |
        #!/bin/bash -ex
        # put your script here
      Tags:
        - Key: Name
          Value: Node instance
